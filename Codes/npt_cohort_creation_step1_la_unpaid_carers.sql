
--------------------------------------------
-- LINKED TABLE
--------------------------------------------

/* STEPS:
 * PART 1 - Carers
 * 1. Select carer, client and assessment info from assessment table
 * 2. Where carer has only 2 assessments and only the second is within the study period, update the FIRST_CARER_ASSMT to the LAST_CARER_ASSMT date and change total count to 1
 * 3. Remove rows where client assessment not between 2017-07-01 and 2022-05-31
 * 4. Remove rows where carer assessment not between 2017-07-01 and 2022-05-31
 * 5. Join assessment table to carer table
 * 6. Remove those where carer ALF_STS_CD not in 1,4,39
 * 7. Join to WDSD_AR_PERS to get sex and WOB
 * 8. Join to WDSD to get LSOA and WIMD on first assessment date (START_DATE <= FIRST_CARER_ASSMT and END_DATE >= FIRST_CARER_ASSMT)
 * 9. Join to RURAL_URBAN... to get RUC
 * 10. Remove those without a sex code of 1 or 2
 * 11. Remove those with null WOB
 * 12. Remove those without NPT LSOA
 * 13. Calculate age on FIRST_CARER_ASSMT
 * 14. Remove those under 18
 * 15. Remove those not resident in Wales on FIRST_CARER_ASSMT and for one year prior 
 * 16. Remove those not registered in a SAIL GP on FIRST_CARER_ASSMT and for one year prior
 * 17. Link to ADDE
 * 18. Remove those who died before FIRST_CARER_ASSMT
 * 
 * PART 2 - Clients
 * 19. Link to client table
 * 20. Censor client info where ALF_STS_CD not in 1, 4, 39
 * 21. Join to WDSD_AR_PERS to get sex and WOB
 * 22. Join to WDSD to get LSOA and WIMD on first assessment date (START_DATE <= FIRST_CARER_ASSMT and END_DATE >= FIRST_CARER_ASSMT)
 * 23. Join to RURAL_URBAN... to get RUC
 * 24. Calculate age on FIRST_CARER_ASSMT
 * 25. Censor those who died before FIRST_CARER_ASSMT?
 */

DROP TABLE SAILW1429V.LB_NPT_CARERS;

DROP TABLE SAILW1429V.LB_NPT_CARERS_DEMOG;

DROP TABLE SAILW1429V.LB_LA_CARER_NPT;

-- Count no. assessment 'records'
SELECT 
	COUNT(*)
FROM 
	SAIL1429V.UPCD_NPT_CARER_20220627; 

SELECT 
	COUNT(*)
FROM 
	SAIL1429V.UPCD_NPT_CARER_20220627
WHERE 
	FIRST_CARER_ASSMT IS NOT NULL; 	

SELECT 
	COUNT(UNIQUE(CARER_ID_PE))
FROM 
	SAIL1429V.UPCD_NPT_CARER_20220627; 

SELECT 
	COUNT(UNIQUE(CARER_ID_PE))
FROM 
	SAIL1429V.UPCD_NPT_CARER_20220627
WHERE 
	FIRST_CARER_ASSMT IS NOT NULL; 
	
-- Count no. carers according to LA data.
SELECT 
	COUNT(*)
FROM 
	SAIL1429V.UPCD_NPT_CARER_CLIENT_2_ALF_20220627; 

SELECT 
	COUNT(UNIQUE(SYSTEM_ID_PE))
FROM 
	SAIL1429V.UPCD_NPT_CARER_CLIENT_2_ALF_20220627;

SELECT 
	COUNT(UNIQUE(ALF_PE))
FROM 
	SAIL1429V.UPCD_NPT_CARER_CLIENT_2_ALF_20220627; 

CREATE TABLE SAILW1429V.LB_NPT_CARERS (CARER_ALF_PE BIGINT,
CARER_ALF_STS_CD INTEGER,
CARER_ID_PE BIGINT,
--added 07/09/2022 to find individual with 2 carer IDs
FIRST_CARER_ASSMT DATE,
LATEST_CARER_ASSMT DATE,
TOTAL_NUM_ASSESSMENTS INTEGER,
CARER_RELATIONSHIP VARCHAR(19),
CLIENT_ASSESSMENT_DATE DATE,
CLIENT_ID_PE BIGINT);

INSERT
	INTO
	SAILW1429V.LB_NPT_CARERS
SELECT
	-- 1. Select carer, client and assessment info from assessment table
 DISTINCT C.ALF_PE AS CARER_ALF_PE,
 	C.ALF_STS_CD AS CARER_ALF_STS_CD,
	A.CARER_ID_PE,
	-- 2. Where carer has only 2 assessments and only the second is within the study period, update the FIRST_CARER_ASSMT to the LAST_CARER_ASSMT date and change total count to 1
	A.FIRST_CARER_ASSMT,
	A.LATEST_CARER_ASSMT,
	A.TOTAL_NUM_ASSESSMENTS,
	A.CARER_RELATIONSHIP,
	A.CLIENT_ASSESSMENT_DATE,
	A.CLIENT_ID_PE
FROM
	SAIL1429V.UPCD_NPT_CARER_20220627 A
	-- 5. Join assessment table to carer table
LEFT JOIN SAIL1429V.UPCD_NPT_CARER_CLIENT_2_ALF_20220627 C ON
	C.SYSTEM_ID_PE = A.CARER_ID_PE
WHERE
	A.FIRST_CARER_ASSMT IS NOT NULL;


SELECT 
	COUNT(UNIQUE(CARER_ALF_PE))
FROM 
	SAILW1429V.LB_NPT_CARERS;
	
-- 6. Remove those where carer ALF_STS_CD not in 1,4,39. Moved position 2023-07-06 for data flow (added to "linkage problems")
DELETE 
FROM SAILW1429V.LB_NPT_CARERS
WHERE CARER_ALF_STS_CD NOT IN (1,
	4,
	39); 
	
SELECT 
	COUNT(UNIQUE(CARER_ALF_PE))
FROM 
	SAILW1429V.LB_NPT_CARERS; 
	
-- 3. Remove rows where client assessment not between 2017-07-01 and 2022-05-31
DELETE 
FROM SAILW1429V.LB_NPT_CARERS
WHERE CLIENT_ASSESSMENT_DATE NOT BETWEEN '2017-07-01' AND '2022-05-31'; 

SELECT 
	COUNT(UNIQUE(CARER_ALF_PE))
FROM 
	SAILW1429V.LB_NPT_CARERS; 

-- 4. Remove rows where carer assessment not between 2017-07-01 and 2022-05-31
DELETE 
FROM SAILW1429V.LB_NPT_CARERS
WHERE FIRST_CARER_ASSMT NOT BETWEEN '2017-07-01' AND '2022-05-31';
	
SELECT 
	COUNT(UNIQUE(CARER_ALF_PE))
FROM 
	SAILW1429V.LB_NPT_CARERS; 

-- Row count	
SELECT 
	COUNT(*)
FROM 
	SAILW1429V.LB_NPT_CARERS;
	
SELECT 
	COUNT(UNIQUE(CARER_ALF_PE))
FROM 
	SAILW1429V.LB_NPT_CARERS; 
	
-- Create table to start adding in demographics (Done in separate stages for ease of creating exclusion flow chart)
 CREATE TABLE SAILW1429V.LB_NPT_CARERS_DEMOG_PREP (CARER_ALF_PE BIGINT,
CARER_ID_PE BIGINT,
SEX_CARER INTEGER,
WOB_CARER DATE,
FIRST_CARER_ASSMT DATE,
LATEST_CARER_ASSMT DATE,
TOTAL_NUM_ASSESSMENTS INTEGER,
CARER_RELATIONSHIP VARCHAR(19),
CLIENT_ASSESSMENT_DATE DATE,
CLIENT_ID_PE BIGINT);

INSERT
	INTO
	SAILW1429V.LB_NPT_CARERS_DEMOG_PREP
SELECT
	S.CARER_ALF_PE,
	S.CARER_ID_PE,
	D1.GNDR_CD AS SEX_CARER,
	D1.WOB AS WOB_CARER,
	S.FIRST_CARER_ASSMT,
	S.LATEST_CARER_ASSMT,
	S.TOTAL_NUM_ASSESSMENTS,
	S.CARER_RELATIONSHIP,
	S.CLIENT_ASSESSMENT_DATE, 
	S.CLIENT_ID_PE
FROM
	SAILW1429V.LB_NPT_CARERS S
	-- 7. Join to WDSD_AR_PERS to get sex and WOB
LEFT JOIN SAIL1429V.WDSD_AR_PERS_20220704 D1 ON
	S.CARER_ALF_PE = D1.ALF_PE;


SELECT 
	COUNT(UNIQUE(CARER_ALF_PE))
FROM 
	SAILW1429V.LB_NPT_CARERS_DEMOG_PREP; 
	
-- 10. Remove those without a sex code of 1 or 2
DELETE
FROM
	SAILW1429V.LB_NPT_CARERS_DEMOG_PREP
WHERE
	SEX_CARER NOT IN(1,
	2);


-- 11. Remove those with null WOB
DELETE
FROM
	SAILW1429V.LB_NPT_CARERS_DEMOG_PREP
WHERE
	WOB_CARER IS NULL;


 CREATE TABLE SAILW1429V.LB_NPT_CARERS_DEMOG (CARER_ALF_PE BIGINT,
CARER_ID_PE BIGINT,
SEX_CARER INTEGER,
WOB_CARER DATE,
LSOA2011_CD_CARER VARCHAR(10),
LSOA_DESC_CARER VARCHAR(17),
WIMD_CARER INTEGER,
RUC_CARER CHARACTER(2),
RUC_DESC_CARER VARCHAR(47),
FIRST_CARER_ASSMT DATE,
LATEST_CARER_ASSMT DATE,
TOTAL_NUM_ASSESSMENTS INTEGER,
CARER_RELATIONSHIP VARCHAR(19),
CLIENT_ASSESSMENT_DATE DATE,
CLIENT_ID_PE BIGINT);

INSERT
	INTO
	SAILW1429V.LB_NPT_CARERS_DEMOG
SELECT
	S.CARER_ALF_PE,
	S.CARER_ID_PE,
	S.SEX_CARER,
	S.WOB_CARER,
	G1.LSOA2011_CD AS LSOA2011_CD_CARER,
	G1.LSOA_DESC AS LSOA_DESC_CARER,
	G1.WIMD_2019_QUINTILE AS WIMD_CARER,
	R1.RUC11CD AS RUC_CARER,
	R1.RUC11 AS RUC_DESC_CARER,
	S.FIRST_CARER_ASSMT,
	S.LATEST_CARER_ASSMT,
	S.TOTAL_NUM_ASSESSMENTS,
	S.CARER_RELATIONSHIP,
	S.CLIENT_ASSESSMENT_DATE, 
	S.CLIENT_ID_PE
FROM
	SAILW1429V.LB_NPT_CARERS_DEMOG_PREP S
	-- 8. Join to WDSD to get LSOA and WIMD on first assessment date (START_DATE <= FIRST_CARER_ASSMT and END_DATE >= FIRST_CARER_ASSMT)
LEFT JOIN SAIL1429V.WDSD_CLEAN_ADD_GEOG_CHAR_LSOA2011_20220704 G1 ON
	G1.ALF_PE = S.CARER_ALF_PE
	-- 9. Join to RURAL_URBAN... to get RUC
LEFT JOIN SAILREFRV.RURAL_URBAN_CLASS_2011_OF_LLSOAREAS_IN_ENG_AND_WAL R1 ON
	R1.LSOA11CD = G1.LSOA2011_CD
WHERE
	G1.START_DATE <= S.FIRST_CARER_ASSMT
	AND G1.END_DATE >= S.FIRST_CARER_ASSMT;


SELECT 
	COUNT(UNIQUE(CARER_ALF_PE))
FROM 
	SAILW1429V.LB_NPT_CARERS_DEMOG; 

-- 12. Remove those without NPT LSOA
 DELETE
FROM
	SAILW1429V.LB_NPT_CARERS_DEMOG
WHERE
	LSOA_DESC_CARER != 'Neath Port Talbot';


SELECT 
	COUNT(UNIQUE(CARER_ALF_PE))
FROM 
	SAILW1429V.LB_NPT_CARERS_DEMOG; 

-- ADD a COLUMN FOR age
 ALTER TABLE SAILW1429V.LB_NPT_CARERS_DEMOG ADD COLUMN AGE_CARER INTEGER;
-- 13. Calculate age on FIRST_CARER_ASSMT
 UPDATE
	SAILW1429V.LB_NPT_CARERS_DEMOG
SET
	AGE_CARER = YEARS_BETWEEN(FIRST_CARER_ASSMT,
	WOB_CARER);


-- 14. Remove those under 18
 DELETE
FROM
	SAILW1429V.LB_NPT_CARERS_DEMOG
WHERE
	AGE_CARER < 18;



 UPDATE
	SAILW1429V.LB_NPT_CARERS_DEMOG
SET
	(CARER_ALF_PE,
	CARER_ID_PE,
	SEX_CARER,
	WOB_CARER,
	LSOA2011_CD_CARER,
	LSOA_DESC_CARER,
	WIMD_CARER,
	RUC_CARER,
	RUC_DESC_CARER,
	FIRST_CARER_ASSMT,
	LATEST_CARER_ASSMT,
	TOTAL_NUM_ASSESSMENTS,
	CARER_RELATIONSHIP,
	CLIENT_ASSESSMENT_DATE,
	CLIENT_ID_PE,
	AGE_CARER) =
	-- Select all columns so can group and select min first assess and max last assess
(
	SELECT
		CARER_ALF_PE,
		MIN(CARER_ID_PE),
		SEX_CARER,
		WOB_CARER,
		LSOA2011_CD_CARER,
		LSOA_DESC_CARER,
		WIMD_CARER,
		RUC_CARER,
		RUC_DESC_CARER,
		MIN(FIRST_CARER_ASSMT),
		MAX(LATEST_CARER_ASSMT),
		TOTAL_NUM_ASSESSMENTS,
		CARER_RELATIONSHIP,
		CLIENT_ASSESSMENT_DATE,
		CLIENT_ID_PE,
		MIN(AGE_CARER)
	FROM
		SAILW1429V.LB_NPT_CARERS_DEMOG
		-- specify only want to take min and max for alf with more than 1 row (on reflection, probably not neccessary, as all others will just form a group of one and stay as they are)
		WHERE CARER_ALF_PE IN (
		SELECT
			CARER_ALF_PE
		FROM
			(
			SELECT
				CARER_ALF_PE,
				COUNT(UNIQUE(CARER_ID_PE))
			FROM
				SAILW1429V.LB_NPT_CARERS_DEMOG
			GROUP BY
				CARER_ALF_PE
			HAVING
				COUNT(UNIQUE(CARER_ID_PE)) >1))
		-- group by all variables other than assess dates
		GROUP BY CARER_ALF_PE,
		SEX_CARER,
		WOB_CARER,
		LSOA2011_CD_CARER,
		LSOA_DESC_CARER,
		WIMD_CARER,
		RUC_CARER,
		RUC_DESC_CARER,
		TOTAL_NUM_ASSESSMENTS,
		CARER_RELATIONSHIP,
		CLIENT_ASSESSMENT_DATE,
		CLIENT_ID_PE)
WHERE
	CARER_ALF_PE IN (
	SELECT
		CARER_ALF_PE
	FROM
		(
		SELECT
			CARER_ALF_PE,
			COUNT(UNIQUE(CARER_ID_PE))
		FROM
			SAILW1429V.LB_NPT_CARERS_DEMOG
		GROUP BY
			CARER_ALF_PE
		HAVING
			COUNT(UNIQUE(CARER_ID_PE)) >1));


-- generate row numbers, and remove those greater than 1 to remove duplicate
 DELETE
FROM
	(
	SELECT
		ROW_NUMBER() OVER (PARTITION BY CARER_ALF_PE,
		CARER_ID_PE,
		SEX_CARER,
		WOB_CARER,
		LSOA2011_CD_CARER,
		LSOA_DESC_CARER,
		WIMD_CARER,
		RUC_CARER,
		RUC_DESC_CARER,
		FIRST_CARER_ASSMT,
		LATEST_CARER_ASSMT,
		TOTAL_NUM_ASSESSMENTS,
		CARER_RELATIONSHIP,
		CLIENT_ASSESSMENT_DATE,
		CLIENT_ID_PE,
		AGE_CARER) AS ROW_NUM
	FROM
		SAILW1429V.LB_NPT_CARERS_DEMOG)
WHERE
	ROW_NUM > 1;


-- Add column for carer DOD
 ALTER TABLE SAILW1429V.LB_NPT_CARERS_DEMOG ADD COLUMN DOD_CARER DATE;
-- Add carer DOD
 MERGE
INTO
	SAILW1429V.LB_NPT_CARERS_DEMOG A
		USING(
	SELECT
		B.*,
		D.DEATH_DT
	FROM
		SAILW1429V.LB_NPT_CARERS_DEMOG B
		-- 15. Link to ADDE
	LEFT JOIN SAIL1429V.ADDE_DEATHS_20220701 D ON
		B.CARER_ALF_PE = D.ALF_PE
	WHERE
		D.ALF_STS_CD IN (1,
		4,
		39)) C ON
	A.CARER_ALF_PE = C.CARER_ALF_PE
	AND A.CARER_ID_PE = C.CARER_ID_PE
	AND A.CARER_RELATIONSHIP = C.CARER_RELATIONSHIP
	AND A.CLIENT_ASSESSMENT_DATE = C.CLIENT_ASSESSMENT_DATE
	WHEN MATCHED THEN
UPDATE
SET
	DOD_CARER = C.DEATH_DT;


-- 16. Remove those who died before FIRST_CARER_ASSMT
 DELETE
FROM
	SAILW1429V.LB_NPT_CARERS_DEMOG
WHERE
	DOD_CARER < FIRST_CARER_ASSMT;


-- 17. Remove those not resident in Wales on FIRST_CARER_ASSMT and for one year prior 
-- Add welsh flag column
 ALTER TABLE SAILW1429V.LB_NPT_CARERS_DEMOG ADD COLUMN WALES_FLAG INTEGER;
-- Merge WDSD_ADD_WALES table, set WALES_FLAG to 1 for those resident in Wales on their first assess date and for a year before
 MERGE
INTO
	SAILW1429V.LB_NPT_CARERS_DEMOG A
		USING (
	SELECT
		A.*
	FROM
		SAILW1429V.LB_NPT_CARERS_DEMOG A
	LEFT JOIN SAIL1429V.WDSD_CLEAN_ADD_WALES_20220704 W ON
		A.CARER_ALF_PE = W.ALF_PE
	WHERE
		W.WELSH_ADDRESS = 1
		AND (A.FIRST_CARER_ASSMT - 1 YEAR >= W.START_DATE)
		AND (A.FIRST_CARER_ASSMT <= W.END_DATE)) B ON
	A.CARER_ALF_PE = B.CARER_ALF_PE
	AND A.CLIENT_ID_PE = B.CLIENT_ID_PE
	AND A.CARER_RELATIONSHIP = B.CARER_RELATIONSHIP
	AND A.CLIENT_ASSESSMENT_DATE = B.CLIENT_ASSESSMENT_DATE 
	WHEN MATCHED THEN
UPDATE
SET
	WALES_FLAG = 1;


-- Delete rows where not resident in Wales on their first assess date and for a year before
 DELETE
FROM
	SAILW1429V.LB_NPT_CARERS_DEMOG
WHERE
	WALES_FLAG IS NULL;


SELECT 
	COUNT(UNIQUE(CARER_ALF_PE))
FROM 
	SAILW1429V.LB_NPT_CARERS_DEMOG; 

-- 18. Remove those not registered in a SAIL GP on FIRST_CARER_ASSMT and for one year prior
-- Add GP flag column
 ALTER TABLE SAILW1429V.LB_NPT_CARERS_DEMOG ADD COLUMN SAIL_GP_FLAG INTEGER;
-- Merge LB_SAIL_GP_REG_LOOKUP table, set SAIL_GP_FLAG to 1 for those resident in Wales on their first assess date and for a year before
MERGE
INTO
	SAILW1429V.LB_NPT_CARERS_DEMOG A
		USING (
	SELECT
		A.*
	FROM
		SAILW1429V.LB_NPT_CARERS_DEMOG A
	LEFT JOIN SAILW1429V.LB_SAIL_GP_REG_LOOKUP S ON
		A.CARER_ALF_PE = S.ALF_PE
	WHERE
		(A.FIRST_CARER_ASSMT - 1 YEAR >= S.START_DATE)
		AND (A.FIRST_CARER_ASSMT <= S.END_DATE)) B ON
	A.CARER_ALF_PE = B.CARER_ALF_PE
	AND A.CLIENT_ID_PE = B.CLIENT_ID_PE
	AND A.CARER_RELATIONSHIP = B.CARER_RELATIONSHIP
	AND A.CLIENT_ASSESSMENT_DATE = B.CLIENT_ASSESSMENT_DATE 
	WHEN MATCHED THEN
UPDATE
SET
	SAIL_GP_FLAG = 1;


-- Delete rows where not register with SAIL GP on their first assess date and for a year before
 DELETE
FROM
	SAILW1429V.LB_NPT_CARERS_DEMOG
WHERE
	SAIL_GP_FLAG IS NULL;


SELECT 
	COUNT(UNIQUE(CARER_ALF_PE))
FROM 
	SAILW1429V.LB_NPT_CARERS_DEMOG; 

-- Add in client DOB, sex, WIMD, RUC based on carer's first assess date.
 CREATE TABLE SAILW1429V.LB_LA_CARER_NPT (CARER_ALF_PE BIGINT,
CARER_ID_PE BIGINT,
SEX_CARER INTEGER,
WOB_CARER DATE,
AGE_CARER INTEGER,
DOD_CARER DATE,
LSOA2011_CD_CARER VARCHAR(10),
LSOA_DESC_CARER VARCHAR(17),
WIMD_CARER INTEGER,
RUC_CARER CHARACTER(2),
RUC_DESC_CARER VARCHAR(47),
FIRST_CARER_ASSMT DATE,
LATEST_CARER_ASSMT DATE,
TOTAL_NUM_ASSESSMENTS INTEGER,
CARER_RELATIONSHIP VARCHAR(19),
CLIENT_ASSESSMENT_DATE DATE,
CLIENT_ALF_PE BIGINT,
CLIENT_ID_PE BIGINT);

INSERT
	INTO
	SAILW1429V.LB_LA_CARER_NPT
SELECT
	DISTINCT B.CARER_ALF_PE,
	B.CARER_ID_PE,
	B.SEX_CARER,
	B.WOB_CARER,
	B.AGE_CARER,
	B.DOD_CARER,
	B.LSOA2011_CD_CARER,
	B.LSOA_DESC_CARER,
	B.WIMD_CARER,
	B.RUC_CARER,
	B.RUC_DESC_CARER,
	B.FIRST_CARER_ASSMT,
	B.LATEST_CARER_ASSMT,
	B.TOTAL_NUM_ASSESSMENTS,
	B.CARER_RELATIONSHIP,
	B.CLIENT_ASSESSMENT_DATE,
	B.CLIENT_ALF_PE,
	B.CLIENT_ID_PE
FROM
	(
	SELECT
		A.*,
		C.ALF_PE AS CLIENT_ALF_PE
	FROM
		SAILW1429V.LB_NPT_CARERS_DEMOG A
	LEFT JOIN (
		SELECT
			*
			-- 19. Link to client table
		FROM
			SAIL1429V.UPCD_NPT_CARER_CLIENT_1_ALF_20220627
			-- 20. Censor client info where ALF_STS_CD not in 1, 4, 39
		WHERE
			ALF_STS_CD IN (1,
			4,
			39)) C ON
		A.CLIENT_ID_PE = C.SYSTEM_ID_PE) B;


-- Add columns for sex and wob
 ALTER TABLE SAILW1429V.LB_LA_CARER_NPT ADD COLUMN SEX_CLIENT INTEGER ADD COLUMN WOB_CLIENT DATE;
-- Add in sex and wob
 MERGE
INTO
	SAILW1429V.LB_LA_CARER_NPT A
		USING(
	SELECT
		B.*,
		W.GNDR_CD,
		W.WOB
	FROM
		SAILW1429V.LB_LA_CARER_NPT B
		-- 21. Join to WDSD_AR_PERS to get sex and WOB
	LEFT JOIN SAIL1429V.WDSD_AR_PERS_20220704 W ON
		B.CLIENT_ALF_PE = W.ALF_PE) C ON
	A.CLIENT_ALF_PE = C.CLIENT_ALF_PE
	-- match on carer ALF to account for people being cared for by multiple people
	AND A.CARER_ALF_PE = C.CARER_ALF_PE
	-- match on carer relationship to account for multiple recordings of relationship type
	AND A.CARER_RELATIONSHIP = C.CARER_RELATIONSHIP
	AND A.CLIENT_ASSESSMENT_DATE = C.CLIENT_ASSESSMENT_DATE 
	WHEN MATCHED THEN
UPDATE
SET
	SEX_CLIENT = C.GNDR_CD,
	WOB_CLIENT = C.WOB;


-- Add in column for client age
 ALTER TABLE SAILW1429V.LB_LA_CARER_NPT ADD COLUMN AGE_CLIENT INTEGER;
-- 22. Calculate age on FIRST_CARER_ASSMT
 UPDATE
	SAILW1429V.LB_LA_CARER_NPT
SET
	AGE_CLIENT = YEARS_BETWEEN(FIRST_CARER_ASSMT,
	WOB_CLIENT);
	
	
	-- Add column for client DOD
 ALTER TABLE SAILW1429V.LB_LA_CARER_NPT ADD COLUMN DOD_CLIENT DATE;
-- Add in client DOD
 MERGE
INTO
	SAILW1429V.LB_LA_CARER_NPT A
		USING(
	SELECT
		B.*,
		D.DEATH_DT
	FROM
		SAILW1429V.LB_LA_CARER_NPT B
	LEFT JOIN SAIL1429V.ADDE_DEATHS_20220701 D ON
		B.CLIENT_ALF_PE = D.ALF_PE
	WHERE
		D.ALF_STS_CD IN (1,
		4,
		39)) C ON
	A.CLIENT_ALF_PE = C.CLIENT_ALF_PE
	-- match on carer ALF to account for people being cared for by multiple people
	AND A.CARER_ALF_PE = C.CARER_ALF_PE
	-- match on carer relationship to account for multiple recordings of relationship type
	AND A.CARER_RELATIONSHIP = C.CARER_RELATIONSHIP
	AND A.CLIENT_ASSESSMENT_DATE = C.CLIENT_ASSESSMENT_DATE 
	WHEN MATCHED THEN
UPDATE
SET
	DOD_CLIENT = C.DEATH_DT;


-- check counts
-- Row count
SELECT COUNT(*) 
FROM SAILW1429V.LB_LA_CARER_NPT; 
-- Person count
SELECT COUNT(UNIQUE(CARER_ALF_PE)) 
FROM SAILW1429V.LB_LA_CARER_NPT; 

-- Add columns for WIMD, RUC and RUC description
 ALTER TABLE SAILW1429V.LB_LA_CARER_NPT ADD COLUMN WIMD_CLIENT INTEGER ADD COLUMN RUC_CLIENT CHARACTER(2) ADD COLUMN RUC_DESC_CLIENT VARCHAR(47);
-- Add in WIMD, RUC and RUC description
 MERGE
INTO
	SAILW1429V.LB_LA_CARER_NPT A
		USING (
	SELECT
		*
	FROM
		(
		SELECT
			B.*,
			G.LSOA2011_CD,
			G.WIMD_2019_QUINTILE
		FROM
			SAILW1429V.LB_LA_CARER_NPT B
			-- 24. Join to WDSD to get LSOA and WIMD on first assessment date (START_DATE <= FIRST_CARER_ASSMT and END_DATE >= FIRST_CARER_ASSMT)
		LEFT JOIN SAIL1429V.WDSD_CLEAN_ADD_GEOG_CHAR_LSOA2011_20220704 G ON
			B.CLIENT_ALF_PE = G.ALF_PE
		WHERE
			(G.START_DATE <= B.FIRST_CARER_ASSMT
			AND G.END_DATE >= B.FIRST_CARER_ASSMT)) C
			-- 25. Join to RURAL_URBAN... to get RUC
	LEFT JOIN SAILREFRV.RURAL_URBAN_CLASS_2011_OF_LLSOAREAS_IN_ENG_AND_WAL R ON
		C.LSOA2011_CD = R.LSOA11CD) E ON
	A.CLIENT_ALF_PE = E.CLIENT_ALF_PE
	-- match on carer ALF to account for people being cared for by multiple people
	AND A.CARER_ALF_PE = E.CARER_ALF_PE
	-- match on carer relationship to account for multiple recordings of relationship type
	AND A.CARER_RELATIONSHIP = E.CARER_RELATIONSHIP
	AND A.CLIENT_ASSESSMENT_DATE = E.CLIENT_ASSESSMENT_DATE 
	WHEN MATCHED THEN
UPDATE
SET
	WIMD_CLIENT = E.WIMD_2019_QUINTILE,
	RUC_CLIENT = E.RUC11CD,
	RUC_DESC_CLIENT = E.RUC11;


-- check counts
-- Row count
 SELECT
	COUNT(*)
FROM
	SAILW1429V.LB_LA_CARER_NPT;

 SELECT
	COUNT(*)
FROM
	SAILW1429V.LB_LA_CARER_NPT
WHERE
	WIMD_CLIENT IS NULL;


-- Person count
 SELECT
	COUNT(UNIQUE(CARER_ALF_PE))
FROM
	SAILW1429V.LB_LA_CARER_NPT; 


-- OUTSTANDING QUESTIONS:
-- HOW TO TREAT CARERS ASSOCIATED WITH MORE THAN ONE CLIENT? -- count assessments for distinct carers, but include both clients in any client analysis
-- HOW TO TREAT THOSE WITH DIFFERENT RECORDED RELATIONSHIPS? -- prioritise familial relationships
-- HOW TO TREAT CARER_ALF_PE THAT MATCHES 2 CARER_ID? -- combined these rows so the individual has 1 row 2 carer assessments.

-- Favour familial relationships. Where a carer-client pairing has multiple recorded relationships, prioritise familial.
DELETE FROM SAILW1429V.LB_LA_CARER_NPT A
WHERE NOT EXISTS(
SELECT B.CARER_ALF_PE,
		B.CARER_ID_PE,
		B.SEX_CARER,
		B.WOB_CARER,
		B.AGE_CARER,
		B.DOD_CARER,
		B.LSOA2011_CD_CARER,
		B.LSOA_DESC_CARER,
		B.WIMD_CARER,
		B.RUC_CARER,
		B.RUC_DESC_CARER,
		B.FIRST_CARER_ASSMT,
		B.LATEST_CARER_ASSMT,
		B.TOTAL_NUM_ASSESSMENTS,
		B.CARER_RELATIONSHIP,
		B.CLIENT_ASSESSMENT_DATE,
		B.CLIENT_ALF_PE,
		B.CLIENT_ID_PE
FROM(
SELECT
	B.*,
	ROW_NUMBER() OVER(PARTITION BY CARER_ALF_PE, CLIENT_ALF_PE ORDER BY CARER_ALF_PE, CLIENT_ALF_PE, CARER_RELATIONSHIP_RANK) AS RN
FROM
	(
	SELECT
		*,
		CASE
			WHEN CARER_RELATIONSHIP IN('CARER',
			'PERSONAL ASSISTANT',
			'NEXT OF KIN',
			'EMERGENCY CONTACT') THEN 2
			WHEN CARER_RELATIONSHIP IN('UNKNOWN',
			'OTHER') THEN 3
			ELSE 1
		END AS CARER_RELATIONSHIP_RANK
	FROM
		SAILW1429V.LB_LA_CARER_NPT) B) B
WHERE 
	RN = 1
	AND B.CARER_ALF_PE = A.CARER_ALF_PE 
	AND B.CLIENT_ALF_PE = A.CLIENT_ALF_PE
	AND B.CARER_RELATIONSHIP = A.CARER_RELATIONSHIP
	AND A.CLIENT_ASSESSMENT_DATE = B.CLIENT_ASSESSMENT_DATE)
; 


-- Row count
 SELECT
	COUNT(*)
FROM
	SAILW1429V.LB_LA_CARER_NPT;


-- Person count
 SELECT
	COUNT(UNIQUE(CARER_ALF_PE))
FROM
	SAILW1429V.LB_LA_CARER_NPT; 


-- Check client demographic counts
-- ALF
 SELECT
	COUNT(*)
FROM
	SAILW1429V.LB_LA_CARER_NPT
WHERE
	CLIENT_ALF_PE IS NULL;
-- SEX
SELECT
	COUNT(*)
FROM
	SAILW1429V.LB_LA_CARER_NPT
WHERE SEX_CLIENT NOT IN(1,2); 
-- AGE
SELECT
	COUNT(*)
FROM
	SAILW1429V.LB_LA_CARER_NPT
WHERE
	AGE_CLIENT IS NULL; 
-- WIMD
SELECT
	COUNT(*)
FROM
	SAILW1429V.LB_LA_CARER_NPT
WHERE
	WIMD_CLIENT IS NULL; 
	
-- carer-client pairings with more than one row
SELECT
	CARER_ALF_PE, CLIENT_ALF_PE, COUNT(*)
FROM
	SAILW1429V.LB_LA_CARER_NPT
GROUP BY 
	CARER_ALF_PE, CLIENT_ALF_PE
HAVING COUNT(*) > 1; 


-- How many carers have multiple rows?
SELECT
	CARER_ALF_PE, COUNT(*)
FROM
	SAILW1429V.LB_LA_CARER_NPT
GROUP BY 
	CARER_ALF_PE
HAVING COUNT(*) > 1; 



