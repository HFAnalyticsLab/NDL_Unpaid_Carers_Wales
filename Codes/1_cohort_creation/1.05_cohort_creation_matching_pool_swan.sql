---------------------------------
--GP identified carers Swansea
---------------------------------
/* - Carers identified IN GP DATA FROM 2021-04-01 TO 2022-06-19
 * - Alive on event date
 * - Aged >= 18 on event date
 * - Known sex (1 or 2)
 * - Resides inSwansea on study start date (Also accounts for known deprivation) - LSOA codes in SAILW1429V.LB_LSOA_LA_LOOKUP
 * - Resident in Wales for one year prior to event date
 * - Registered at a SAIL GP within study period
 * - ALF_STS_CD 1, 4 or 39
 */

---------------------------------
--  identified carers Swansea
---------------------------------
/* - those identified IN GP DATA FROM 2021-04-01 TO 2022-06-19
 * - Alive on 2021-04-01
 * - Aged >= 18 on 2021-04-01
 * - Known sex (1 or 2)
 * - Resides inSwansea on event date (Also accounts for known deprivation) - LSOA codes in SAILW1429V.LB_LSOA_LA_LOOKUP
 * - Resident in Wales for one year prior to event date
 * - Registered at a SAIL GP for one year prior to event date
 * - ALF_STS_CD 1, 4 or 39
 */




/* Cleaning steps
 * STEP 1  
 * 1. WDSD geography START_DT <= 2022-06-19 and END_DT >= 2021-04-01 (have an LSOA within study period)
 * 2. LSOA_DESC in Swansea
 * 3. Link to WDSD demographics
 * 4. Sex 1 or 2
 * 
 * STEP 2 (create cohort of GP identified Unpaid carers for exclusion)
 * 5. Link to WLGP (inner join)
 *  -	ALF_STS_CD 1, 4 or 39
 *  -	Unpaid carer code with EVENT_DT during LSOA period
 *  -   GP carer code occurred whilst living at LSOA already selected
 *  -   GP carer code occurred within study period
 * 
 * STEP 3 (wash out period of 2 years for exclusion) 
 * 6. Link to WLGP (inner join)
 * 7. Create cohort with unpaid carer read code in the 2 year period before the study start 
 * 
 * STEP 4  
 * 8. Exclude if in  GP or LA unpaid carers cohort
 * 9. Exclude from WDSD data unpaid carers identified in the LA, GP and step 6 
 * 
 * STEP 5
 * 10. Link to ADDE
 * 11. Drop rows with DEATH_DT before EVENT_DT
 * 12. Drop rows under 16 at study start 
 * 
 * STEP 6
 * 13. Link to CLEAN_ADD_WALES
 * 14. Keep where Welsh = 1
 * 15. Drop rows where WELSH_END_DATE < study start
 * 
 * 
 * Create lookup table for all GP registrations for each ALF
 * 16. GP registration within WELSH address period
 * 
 * Create lookup table for all addresses for each ALF
 * 17. LSOA within WELSH address period
 * 
 * Create lookup of matching individuals with carer read code for washout period
 * 18. Left join WLGP to get all read codes per ALF
 * 19. Has Unpaid carer code 
 * 
 * STEP7
 * 20. deduplicated list with only ALFs
 */
DROP TABLE SAILW1429V.PEJE_GPMATCHINGPOOL_STEP1_SWANSEA; 
DROP TABLE SAILW1429V.PEJE_GP_UNPAIDCARERS_20190101_SWANSEA;
DROP TABLE SAILW1429V.PEJE_GPMATCHINGPOOL_STEP3_SWANSEA;
DROP TABLE SAILW1429V.PEJE_GPMATCHINGPOOL_STEP4_SWANSEA;
DROP TABLE SAILW1429V.PEJE_GPMATCHINGPOOL_STEP5_SWANSEA;
DROP TABLE SAILW1429V.PEJE_GPMATCHINGPOOL_SWANSEA;
DROP TABLE SAILW1429V.PEJE_GPMATCHINGPOOL_STEP8_SWANSEA;
DROP TABLE SAILW1429V.PEJE_GPMATCHINGPOOL_STEP9_SWANSEA;

DROP TABLE SAILW1429V.PEJE_GPMATCHINGPOOL_STEP1_SWANSEA;
CREATE TABLE SAILW1429V.PEJE_GPMATCHINGPOOL_STEP1_SWANSEA
(ALF_PE BIGINT
, START_DATE DATE
, END_DATE DATE
, LSOA2011_CD VARCHAR(10)
, WIMD INTEGER
, WIMD_DESC VARCHAR(50)
, RUC11CD VARCHAR(3)
, RUC11_DESC VARCHAR(50)
, LA_NAME VARCHAR(50)
, SEX INTEGER
, WOB DATE);

INSERT INTO SAILW1429V.PEJE_GPMATCHINGPOOL_STEP1_SWANSEA
-- 3. Link to WDSD demographics
SELECT DISTINCT B.*, P.GNDR_CD AS SEX, P.WOB 
FROM(
	-- 2. LSOA_DESC in Swansea
	SELECT A.*, R.RUC11CD, R.RUC11, L.LA_NAME
	FROM(
		-- 1. WDSD geography START_DT <= 2022-06-19 and END_DT >= 2021-04-01 (have an LSOA within study period)
		SELECT ALF_PE, START_DATE, END_DATE, LSOA2011_CD, WIMD_2019_QUINTILE , WIMD_2019_QUINTILE_DESC 
		FROM SAIL1429V.WDSD_CLEAN_ADD_GEOG_CHAR_LSOA2011_20220704 G
		WHERE START_DATE <= '2022-06-19' AND END_DATE >= '2021-04-01'
	) A
	INNER JOIN SAILW1429V.LB_LSOA_LA_LOOKUP L
	ON A.LSOA2011_CD = L.LSOA_CD	
	-- join ruc
	LEFT JOIN (SELECT LSOA11CD,RUC11CD,RUC11  FROM SAILREFRV.RURAL_URBAN_CLASS_2011_OF_LLSOAREAS_IN_ENG_AND_WAL) R
	ON R.LSOA11CD = A.LSOA2011_CD
	WHERE LA_NAME = 'Swansea'
	
) B
LEFT JOIN SAIL1429V.WDSD_AR_PERS_20220704 P
ON B.ALF_PE = P.ALF_PE; -- 
-- Adding step 4 here goes beyond counting capabilities of SAIL, so create table with output of steps 1-3.

-- 4. Sex 1 or 2
DELETE FROM SAILW1429V.PEJE_GPMATCHINGPOOL_STEP1_SWANSEA
WHERE SEX NOT IN(1,2);

-- Remove those with no WOB
DELETE FROM SAILW1429V.PEJE_GPMATCHINGPOOL_STEP1_SWANSEA
WHERE WOB IS NULL; 


DROP TABLE SAILW1429V.PEJE_GP_UNPAIDCARERS_20190101_SWANSEA;

CREATE TABLE SAILW1429V.PEJE_GP_UNPAIDCARERS_20190101_SWANSEA
(ALF_PE BIGINT,
LSOA2011_CD VARCHAR(10),
WIMD_2019_QUINTILE INTEGER,
LA_NAME VARCHAR(100),
SEX INTEGER,
WOB DATE,
EVENT_DT DATE);
--7. Create cohort with unpaid carer read code in the 2 year period before the study start 

INSERT INTO SAILW1429V.PEJE_GP_UNPAIDCARERS_20190101_SWANSEA
SELECT DISTINCT A.ALF_PE , A.LSOA2011_CD, A.WIMD , A.LA_NAME, A.SEX, A.WOB , MAX(GP.EVENT_DT) LATEST_UNPAIDCARER_EVENT_DATE
FROM SAILW1429V.PEJE_GPMATCHINGPOOL_STEP1_SWANSEA A
--6. Link to WLGP (inner join)
INNER JOIN SAIL1429V.WLGP_GP_EVENT_CLEANSED_20220301 GP
ON A.ALF_PE = GP.ALF_PE 
--  -	ALF_STS_CD 1, 4 or 39
WHERE GP.ALF_STS_CD IN (1, 4, 39) 
 --  -	Unpaid carer code with EVENT_DT during LSOA period
AND GP.EVENT_CD IN(SELECT READ_CODE FROM(SELECT READ_CODE 
	FROM SAILW1429V.LB_CARER_READ_CODES RC))  
-- GP carer code occurred within study period
AND GP.EVENT_DT >= '2019-04-01' AND GP.EVENT_DT < '2021-04-01'
GROUP BY A.ALF_PE , A.LSOA2011_CD, A.WIMD, A.LA_NAME, A.SEX, A.WOB ; 



-- Count of all ALFs to be excluded
SELECT COUNT (DISTINCT (ALF_PE))  FROM 
( SELECT ALF_PE FROM SAILW1429V.PEJE_DEDUP_GP_LA_SWANSEA
	UNION ALL SELECT ALF_PE FROM SAILW1429V.PEJE_GP_UNPAIDCARERS_20190101_SWANSEA
) a; 



-- Exclude GP identified unpaid carers, get everyone with all their event codes between 2018 to 2022-06-19
DROP TABLE SAILW1429V.PEJE_GPMATCHINGPOOL_STEP3_SWANSEA;

CREATE TABLE SAILW1429V.PEJE_GPMATCHINGPOOL_STEP3_SWANSEA
(ALF_PE BIGINT
, START_DATE DATE
, END_DATE DATE
, LSOA2011_CD VARCHAR(10)
, WIMD INTEGER
, WIMD_DESC VARCHAR(50)
, RUC11CD VARCHAR(3)
, RUC11_DESC VARCHAR(50)
, LA_NAME VARCHAR(50)
, SEX INTEGER
, WOB DATE
, AGE_STUDYSTART INTEGER
);

 --9. Exclude from WDSD data unpaid carers identified in the LA, GP and step 6 
INSERT INTO SAILW1429V.PEJE_GPMATCHINGPOOL_STEP3_SWANSEA
SELECT DISTINCT A.*, YEARS_BETWEEN('2021-04-01', A.WOB) AGE_STUDYSTART
FROM SAILW1429V.PEJE_GPMATCHINGPOOL_STEP1_SWANSEA A
WHERE A.ALF_PE NOT IN (
	-- 8. Exclude if in  GP or LA unpaid carers cohort
	SELECT DISTINCT (ALF_PE)  FROM 
	( SELECT ALF_PE FROM SAILW1429V.PEJE_DEDUP_GP_LA_SWANSEA
		UNION ALL SELECT ALF_PE FROM SAILW1429V.PEJE_GP_UNPAIDCARERS_20190101_SWANSEA
	) a
);


-- count unique individuals
SELECT COUNT (DISTINCT ALF_PE) FROM SAILW1429V.PEJE_GPMATCHINGPOOL_STEP3_SWANSEA;




DROP TABLE SAILW1429V.PEJE_GPMATCHINGPOOL_STEP4_SWANSEA;

CREATE TABLE SAILW1429V.PEJE_GPMATCHINGPOOL_STEP4_SWANSEA
(ALF_PE BIGINT
, START_DATE DATE
, END_DATE DATE
, LSOA2011_CD VARCHAR(10)
, WIMD INTEGER
, WIMD_DESC VARCHAR(50)
, RUC11CD VARCHAR(3)
, RUC11_DESC VARCHAR(50)
, LA_NAME VARCHAR(50)
, SEX INTEGER
, WOB DATE
, AGE_STUDYSTART INTEGER
, DEATH_DT DATE);

-- 10. Link to ADDE
INSERT INTO SAILW1429V.PEJE_GPMATCHINGPOOL_STEP4_SWANSEA
SELECT A.*, D.DEATH_DT
FROM SAILW1429V.PEJE_GPMATCHINGPOOL_STEP3_SWANSEA A
LEFT JOIN SAIL1429V.ADDE_DEATHS_20220701 D
ON A.ALF_PE = D.ALF_PE
WHERE (D.ALF_STS_CD IN(1, 4, 39) OR D.ALF_STS_CD IS NULL);


-- 11. Drop rows with DEATH_DT before EVENT_DT
DELETE FROM SAILW1429V.PEJE_GPMATCHINGPOOL_STEP4_SWANSEA
WHERE DEATH_DT < '2021-04-01'; 





SELECT COUNT(*) FROM SAILW1429V.PEJE_GPMATCHINGPOOL_STEP4_SWANSEA
WHERE DEATH_DT < WOB; 

-- Count if any record has unrealistic death date
SELECT * FROM 
(SELECT ALF_PE, MIN(EVENT_DT) EARLIEST_REG, MAX(EVENT_DT) LATEST_REG, COUNT(EVENT_CD), DEATH_DT
FROM SAILW1429V.PEJE_GPMATCHINGPOOL_STEP4_SWANSEA
GROUP BY ALF_PE, DEATH_DT) a
WHERE A.DEATH_DT < LATEST_REG AND DEATH_DT < '2021-04-01' AND DEATH_DT > '2021-04-01'

SELECT COUNT(*) FROM SAILW1429V.PEJE_GPMATCHINGPOOL_STEP4_SWANSEA
WHERE DEATH_DT < WOB; 


-- Look at age distribution counts (by rows)
SELECT AGE_STUDYSTART, COUNT(*) AS COUNT
FROM SAILW1429V.PEJE_GPMATCHINGPOOL_STEP4_SWANSEA
GROUP BY AGE_STUDYSTART
ORDER BY COUNT DESC;

 -- Look at age distribution counts (by ALF)
SELECT AGE_STUDYSTART, COUNT(UNIQUE(ALF_PE)) AS COUNT
FROM SAILW1429V.PEJE_GPMATCHINGPOOL_STEP4_SWANSEA
GROUP BY AGE_STUDYSTART
ORDER BY COUNT DESC;




-- 12. Drop rows under 18 at study start 
DELETE FROM SAILW1429V.PEJE_GPMATCHINGPOOL_STEP4_SWANSEA
WHERE AGE_STUDYSTART < 18; 

--Count remaining rows in table
SELECT COUNT(*)
FROM SAILW1429V.PEJE_GPMATCHINGPOOL_STEP4_SWANSEA; 
--Count remaining people in table
SELECT COUNT(UNIQUE(ALF_PE))
FROM SAILW1429V.PEJE_GPMATCHINGPOOL_STEP4_SWANSEA; 





DROP TABLE SAILW1429V.PEJE_GPMATCHINGPOOL_STEP5_SWANSEA;

CREATE TABLE SAILW1429V.PEJE_GPMATCHINGPOOL_STEP5_SWANSEA
(ALF_PE BIGINT
, START_DATE DATE
, END_DATE DATE
, LSOA2011_CD VARCHAR(10)
, WIMD INTEGER
, WIMD_DESC VARCHAR(50)
, RUC11CD VARCHAR(3)
, RUC11_DESC VARCHAR(50)
, LA_NAME VARCHAR(50)
, SEX INTEGER
, WOB DATE
, AGE_STUDYSTART INTEGER
, DEATH_DT DATE
, WELSH_START_DT DATE
, WELSH_END_DT DATE
, WELSH_ADDRESS INTEGER);

-- 13. Link to CLEAN_ADD_WALES
INSERT INTO SAILW1429V.PEJE_GPMATCHINGPOOL_STEP5_SWANSEA
SELECT DISTINCT A.*, W.START_DATE, W.END_DATE, W.WELSH_ADDRESS 
FROM SAILW1429V.PEJE_GPMATCHINGPOOL_STEP4_SWANSEA A
LEFT JOIN SAIL1429V.WDSD_CLEAN_ADD_WALES_20220704 W
ON A.ALF_PE = W.ALF_PE
-- 14. Keep where Welsh = 1
WHERE W.WELSH_ADDRESS = 1; 


SELECT count(*) FROM SAILW1429V.PEJE_GPMATCHINGPOOL_STEP5_SWANSEA; 

SELECT count(DISTINCT ALF_PE) FROM SAILW1429V.PEJE_GPMATCHINGPOOL_STEP5_SWANSEA; 


SELECT count(*) FROM SAILW1429V.PEJE_GPMATCHINGPOOL_STEP5_SWANSEA
WHERE WELSH_END_DT <= '2021-04-01'; 

SELECT count(DISTINCT ALF_PE) FROM SAILW1429V.PEJE_GPMATCHINGPOOL_STEP5_SWANSEA
WHERE WELSH_END_DT <= '2021-04-01'; 

SELECT count(DISTINCT ALF_PE) FROM SAILW1429V.PEJE_GPMATCHINGPOOL_STEP5_SWANSEA
WHERE WELSH_END_DT > '2021-04-01';  


-- 15. Drop rows where WELSH_END_DATE < study start
DELETE FROM SAILW1429V.PEJE_GPMATCHINGPOOL_STEP5_SWANSEA
WHERE WELSH_END_DT <= '2021-04-01'; 


SELECT count(DISTINCT ALF_PE) FROM SAILW1429V.PEJE_GPMATCHINGPOOL_STEP5_SWANSEA; 

SELECT * FROM SAILW1429V.PEJE_GPMATCHINGPOOL_STEP5_SWANSEA; 


SELECT count(ALF_PE) total, ALF_PE FROM SAILW1429V.PEJE_GPMATCHINGPOOL_STEP5_SWANSEA
GROUP BY ALF_PE
ORDER BY count( ALF_PE) DESC; 

-- eyeball data
SELECT ALF_PE, WELSH_START_DT FROM SAILW1429V.PEJE_GPMATCHINGPOOL_STEP5_SWANSEA
GROUP BY ALF_PE, WELSH_START_DT
ORDER BY WELSH_START_DT ;

SELECT * FROM SAILW1429V.PEJE_GPMATCHINGPOOL_STEP5_SWANSEA LIMIT 10;


-- Create lookup table for all GP registrations for each ALF
DROP TABLE SAILW1429V.PEJE_GPMATCHINGPOOL_GPREGLKUP_SWANSEA;

CREATE TABLE SAILW1429V.PEJE_GPMATCHINGPOOL_GPREGLKUP_SWANSEA
(ALF_PE BIGINT
,  GPREG_STARTDATE DATE
,  GPREG_ENDDATE DATE
, ISLAND_ID INTEGER
);

INSERT INTO SAILW1429V.PEJE_GPMATCHINGPOOL_GPREGLKUP_SWANSEA
SELECT DISTINCT 
A.ALF_PE
, P.START_DATE AS GPREG_STARTDATE
, P.END_DATE AS GPREG_ENDDATE
, ISLAND_ID
FROM SAILW1429V.PEJE_GPMATCHINGPOOL_STEP5_SWANSEA A
INNER JOIN (SELECT * FROM SAILW1429V.LB_SAIL_GP_REG_LOOKUP) P
ON A.ALF_PE = P.ALF_PE
-- 16. GP registration within WELSH address period
WHERE P.END_DATE >= A.WELSH_START_DT AND P.START_DATE <= A.WELSH_END_DT
ORDER BY A.ALF_PE, P.START_DATE; 



-- Create lookup table for all addresses for each ALF
DROP TABLE SAILW1429V.PEJE_GPMATCHINGPOOL_LSOALKUP_SWANSEA;

CREATE TABLE SAILW1429V.PEJE_GPMATCHINGPOOL_LSOALKUP_SWANSEA
(ALF_PE BIGINT
, LSOA_START_DATE DATE
,  LSOA_END_DATE DATE
,  LSOA2011_CD VARCHAR(50)
,  WIMD INTEGER
,  WIMD_DESC VARCHAR(50)
, RUC11CD VARCHAR(50)
, RUC11_DESC VARCHAR(50)
, LA_NAME VARCHAR(50)
, WELSH_START_DT DATE
, WELSH_END_DT DATE
, WELSH_ADDRESS INTEGER
);

INSERT INTO SAILW1429V.PEJE_GPMATCHINGPOOL_LSOALKUP_SWANSEA
SELECT DISTINCT ALF_PE, START_DATE, END_DATE, LSOA2011_CD,  WIMD, WIMD_DESC, RUC11CD, RUC11_DESC
, LA_NAME, WELSH_START_DT, WELSH_END_DT, WELSH_ADDRESS 
FROM SAILW1429V.PEJE_GPMATCHINGPOOL_STEP5_SWANSEA
-- 17. LSOA within WELSH address period
WHERE END_DATE >= WELSH_START_DT AND START_DATE <= WELSH_END_DT; 


-- Create lookup for washout period
DROP TABLE SAILW1429V.PEJE_GPMATCHINGPOOL_UNPAIDCARERSCODES_SWANSEA;

CREATE TABLE SAILW1429V.PEJE_GPMATCHINGPOOL_UNPAIDCARERSCODES_SWANSEA
(ALF_PE BIGINT
, EVENT_CD VARCHAR(6)
, EVENT_DT DATE
);

INSERT INTO SAILW1429V.PEJE_GPMATCHINGPOOL_UNPAIDCARERSCODES_SWANSEA
SELECT DISTINCT A.ALF_PE, EVENT_CD, EVENT_DT
FROM SAILW1429V.PEJE_GPMATCHINGPOOL_STEP5_SWANSEA A
-- 18. Left join WLGP to get all read codes per ALF
LEFT JOIN (SELECT ALF_PE, EVENT_CD, EVENT_DT, ALF_STS_CD FROM SAIL1429V.WLGP_GP_EVENT_CLEANSED_20220301) GP
ON A.ALF_PE = GP.ALF_PE 
 --  -	ALF_STS_CD 1, 4 or 39
WHERE GP.ALF_STS_CD IN (1, 4, 39) 
-- 19. Has Unpaid carer code 
AND GP.EVENT_CD IN (SELECT READ_CODE FROM (SELECT READ_CODE 
	FROM SAILW1429V.LB_CARER_READ_CODES RC)); 





DROP TABLE SAILW1429V.PEJE_GPMATCHINGPOOL_SWANSEA;

CREATE TABLE SAILW1429V.PEJE_GPMATCHINGPOOL_SWANSEA
(ALF_PE BIGINT,
SEX INTEGER,
WOB DATE,
AGE_STUDYSTART INTEGER,
DEATH_DT DATE);

-- 20. deduplicated list with only ALFs
INSERT INTO SAILW1429V.PEJE_GPMATCHINGPOOL_SWANSEA
SELECT DISTINCT ALF_PE, SEX, WOB, AGE_STUDYSTART, DEATH_DT
FROM SAILW1429V.PEJE_GPMATCHINGPOOL_STEP5_SWANSEA; 

SELECT count(DISTINCT ALF_PE) FROM SAILW1429V.PEJE_GPMATCHINGPOOL_SWANSEA; 




-- DELETE INTERIM TABLES
DROP TABLE SAILW1429V.PEJE_GPMATCHINGPOOL_STEP1_SWANSEA; 
DROP TABLE SAILW1429V.PEJE_GP_UNPAIDCARERS_20190101_SWANSEA;
DROP TABLE SAILW1429V.PEJE_GPMATCHINGPOOL_STEP3_SWANSEA;
DROP TABLE SAILW1429V.PEJE_GPMATCHINGPOOL_STEP4_SWANSEA;
DROP TABLE SAILW1429V.PEJE_GPMATCHINGPOOL_STEP5_SWANSEA;



